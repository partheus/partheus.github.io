{% set navItems = collections.nav | eleventyNavigation %}
<nav class="nav__container" role="navigation" aria-label="main navigation">
    <ul>
        {%- for item in navItems %}
            <li class="nav__item{{ ' active' if page.url === item.url }}">
                <a href="{{ item.url }}" title="{{ item.key }}">{{ item.key }}</a>
            </li>
        {%- endfor -%}
        <li>
            <a href="/works" class="button button--secondary nav__booklink">books</a>
        </li>
    </ul>
    <div class="go-to-top-container">
        <a href="#" title="Go to top of page">^</a>
    </div>

{#    <div class="theme-toggle-container">#}
{#        <button id="high-contrast-toggle" aria-label="Toggle high contrast mode">&#x29B2;</button>#}
{#    </div>#}
</nav>

{# <script>#}
{#    function initializeThemeToggle() {#}
{#        // Theme toggle#}
{#        const toggleSwitch = document.getElementById("high-contrast-toggle");#}
{#        const body = document.body;#}

{#        const themes = ["default", "low-noir", "high-contrast"];#}
{#        const themeSymbols = {#}
{#            default: "&#x29B0;",#}
{#            "low-noir": "&#x29B1;",#}
{#            "high-contrast": "&#x29B2;",#}
{#        };#}

{#        let currentThemeIndex = 0;#}

{#        // Function to toggle between themes#}
{#        function toggleTheme() {#}
{#            currentThemeIndex = (currentThemeIndex + 1) % themes.length;#}
{#            updateTheme();#}
{#        }#}

{#        // Function to update the current theme#}
{#        function updateTheme() {#}
{#            const currentTheme = themes[currentThemeIndex];#}

{#            // Update the button text with the theme symbol#}
{#            toggleSwitch.innerHTML = themeSymbols[currentTheme];#}

{#            // Set the current theme class#}
{#            body.className = currentTheme;#}

{#            // Save the current theme to localStorage#}
{#            localStorage.setItem("currentTheme", currentTheme);#}
{#        }#}

{#        // Check if the user has previously selected a theme#}
{#        const savedTheme = localStorage.getItem("currentTheme");#}
{#        if (themes.includes(savedTheme)) {#}
{#            currentThemeIndex = themes.indexOf(savedTheme);#}
{#        }#}

{#        // Set the initial mode based on the user's preference#}
{#        updateTheme();#}

{#        toggleSwitch.addEventListener("click", toggleTheme);#}
{#    }#}

{#    // Call the function to initialize the theme toggle#}
{#    initializeThemeToggle();#}



{#</script>#}
